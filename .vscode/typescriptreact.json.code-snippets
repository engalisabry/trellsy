{
  "Function Component": {
    "prefix": "fc",
    "body": [
      "",
      "const ${1:${TM_FILENAME_BASE/(\\w)(\\w*)/${1:/upcase}$2/}} = () => {",
      "  return (",
      "    <div className=\"\">",
      "      $0",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${1:${TM_FILENAME_BASE/(\\w)(\\w*)/${1:/upcase}$2/}};",
    ],
    "description": "Create Function Component",
  },
  "React useState Hook": {
    "prefix": "rus",
    "body": [
      "// State declaration with type safety",
      "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState<${2:string}>(${3:''});",
      "",
      "// Generic change handler for input elements",
      "const handle${1/(.*)/${1:/capitalize}/}Change = (e: React.ChangeEvent<HTMLInputElement>) => {",
      "  set${1/(.*)/${1:/capitalize}/}(e.target.value);",
      "};",
      "",
      "// Direct value setter",
      "const set${1/(.*)/${1:/capitalize}/}Value = (value: ${2:string}) => {",
      "  set${1/(.*)/${1:/capitalize}/}(value);",
      "};",
      "",
      "// Toggle boolean state (useful for flags)",
      "const toggle${1/(.*)/${1:/capitalize}/} = () => {",
      "  set${1/(.*)/${1:/capitalize}/}(prev => !prev);",
      "};",
      "",
      "// Reset state to initial value",
      "const reset${1/(.*)/${1:/capitalize}/} = () => {",
      "  set${1/(.*)/${1:/capitalize}/}(${3:''});",
      "};",
    ],
    "description": "Initialize a useState hook with state variable, setter, and common handler patterns",
  },
}
